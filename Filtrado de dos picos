import numpy as np
from scipy.signal import find_peaks
from paa01 import paaFile

# === LISTA DE ARCHIVOS ===
archivos_paa = [
    r"C:\\Users\\Diego\\Downloads\\LA-mml-data_1h-180320-175704.paa",
    r"C:\\Users\\Diego\\Downloads\\LA-mml-data_1h-180320-174704.paa",
    r"C:\\Users\\Diego\\Downloads\\LA-mml-data_1h-180320-173703.paa",
    r"C:\\Users\\Diego\\Downloads\\LA-mml-data_1h-180320-180704.paa",
    r"C:\\Users\\Diego\\Downloads\\LA-mml-data_1h-180320-181704.paa",
    r"C:\\Users\\Diego\\Downloads\\LA-mml-data_1h-180320-182704.paa"
]

# === PARÁMETROS ===
umbral = -300           # umbral mínimo para considerar un pico
ns_por_punto = 8         # cada punto representa 8 ns
distancia_minima = 100   # en puntos (~800 ns)

delta_ts = []

# === PROCESAR CADA ARCHIVO ===
for archivo_path in archivos_paa:
    print(f"Procesando archivo: {archivo_path}")
    try:
        archivo = paaFile(archivo_path)
        N = archivo.paaGetPulseCount()

        for i in range(N):
            pulso = archivo.paaGetPulseRP(i)
            señal_invertida = [-v for v in pulso]
            picos, _ = find_peaks(señal_invertida, height=-umbral, distance=distancia_minima)

            if len(picos) >= 2:
                p1, p2 = picos[:2]
                dt_ns = abs(p2 - p1) * ns_por_punto
                dt_us = dt_ns / 1000
                delta_ts.append(dt_us)

    except Exception as e:
        print(f"Error con archivo {archivo_path}: {e}")

# === GUARDAR RESULTADOS EN .TXT ===
np.savetxt("delta_ts_validos.txt", delta_ts, fmt="%.6f")
print(f"\nSe guardaron {len(delta_ts)} valores de Δt en delta_ts_validos.txt")





